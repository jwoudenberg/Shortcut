@charset "UTF-8";

/*  GAME ELEMENTS
    The size of the game-div size is inherited by all game elements. Thereby
    code can easily place elements on a 'grid' by defining distances in
    multiples of 100%.

    The size of the game-div itself as a percentage of the size it has available
    can be set by the code at the start of the game depending on, for instance,
    the number of fields on the board.
*/
#game {
    /* will be overwritten by code */
    width:      80px;
    height:     80px;
    position:   absolute;
}

.board, .holder, .deck, .card, .path {
    width:      inherit;
    height:     inherit;
}

.board {
    white-space:nowrap;
    line-height:0;
    position:   absolute;
    z-index:    1;
}

.holder {
    position:   relative;
}

.board > .holder {
    display:    inline-block;
    /*float:      left;*/
    border:     1px solid #ddd;
    margin:     -1px 0 0 -1px;
}

.board > .holder[data-col="0"] {
    /*clear:      left;*/
}

.deck {
    position:   absolute;
    border:     1px solid #aaa;
    background: #eee;
    z-index:    10;
}

.deck:not(.popable) {

}
.deck:not(.popable) > .text {
    color:      #aaa;
}

.card, .cardBack {
    position:   absolute;
    border:     1px solid #aaa;
    margin:     -1px 0 0 -1px;
    background: #eee;
    z-index:    1;
    -ms-transition:     background 300ms, border-radius 300ms, -ms-transform 300ms;
    -moz-transition:    background 300ms, border-radius 300ms, -moz-transform 300ms;
    -webkit-transition: background 300ms, border-radius 300ms, -webkit-transform 300ms;
    -o-transition:      background 300ms, border-radius 300ms, -o-transform 300ms;
    transition:         background 300ms, border-radius 300ms, transform 300ms;
}

.cardBack > .text, .deck > .text {
    margin-top: 30%;
    text-align: center;
    color:      #666;
}

.card > .text {
    position:   absolute;
    width:      100%;
    top:        25%;
    text-align: center;
    color:      #666;
}

.card > .effect {
    position:   absolute;
    box-sizing: border-box;
    top:        0;
    right:      0;
    bottom:     0;
    left:       0;
}

.path {
    position:   absolute;
    top:        0;
    left:       0;
}

.path svg {
    position: absolute;
    top:      0;
    left:     0;
    width:    inherit;
}

/* CARD DRAGGING */
.card.rotateable {
    background:     #fff;
}

.card.draggable  {
    border-color:   #336dff;
    z-index:        2
}
.card.draggable > .effect {
    box-sizing:     border-box;
    border:         4px solid #336dff;
    opacity:        0.2;
}

.card.draggable:hover, .card.rotateable:hover, .card.ui-draggable-dragging {
    border:         2px solid #336dff;
    margin:         -2px 0 0 -2px;
    z-index:        10;
}

.card.ui-draggable-dragging {
    box-shadow:     0 0 4px 2px #555;
}

/* FLIPPING EFFECT */
.deck {
    perspective:            200;
    -moz-perspective:       200;
    -webkit-perspective:    200;
    -o-perspective:         200;
}

.deck > .holder {
    position:               absolute;

    transform-style:        preserve-3d;
    -moz-transform-style:   preserve-3d;
    -webkit-transform-style:preserve-3d;
    -o-transform-style:     preserve-3d;

    -ms-transform-origin:       100% 50%;
    -moz-transform-origin:      100% 50%;
    -webkit-transform-origin:   100% 50%;
    -o-transform-origin:        100% 50%;
    transform-origin:           100% 50%;

    backface-visibility:        hidden;
    -moz-backface-visibility:   hidden;
    -webkit-backface-visibility:hidden;
    -o-backface-visibility:     hidden;

    -ms-transform:          rotateY(-180deg) translateX(100%);
    -moz-transform:         rotateY(-180deg) translateX(100%);
    -webkit-transform:      rotateY(-180deg) translateX(100%);
    -o-transform:           rotateY(-180deg) translateX(100%);
    transform:              rotateY(-180deg) translateX(100%);
}

.deck:not(.flipped) > .holder {
    -ms-transition:         transform 500ms;
    -moz-transition:        -moz-transform 500ms;
    -webkit-transition:     -webkit-transform 500ms;
    -o-transition:          -o-transform 500ms;
    transition:             transform 500ms;

    -ms-transform:          rotateY(0) translateX(0);
    -moz-transform:         rotateY(0) translateX(0);
    -webkit-transform:      rotateY(0) translateX(0);
    -o-transform:           rotateY(0) translateX(0);
    transform:              rotateY(0) translateX(0);
}

.deck > .holder > .card, .deck > .holder > .cardBack {
    -moz-backface-visibility:   hidden;
    -webkit-backface-visibility:hidden;
    -o-backface-visibility:     hidden;
    backface-visibility:        hidden;
}

.deck > .holder > .cardBack {
    -ms-transform:          rotateY(-180deg);
    -moz-transform:         rotateY(-180deg);
    -webkit-transform:      rotateY(-180deg);
    -o-transform:           rotateY(-180deg);
    transform:              rotateY(-180deg);
}